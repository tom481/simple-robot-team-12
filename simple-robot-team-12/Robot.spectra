import "./imports/DwyerPatternsNamed.spectra"

spec Robot

define NumObstacles := 14;
define DX := 7;
define DY := 7;


type DimX = Int(0..DX);
type DimY = Int(0..DY);

env  DimX targetX;
env  DimY targetY;

 
sys DimX robotX;
sys DimY robotY;
sys {UP, DOWN, LEFT, RIGHT, STAY} move;

////Robot starts on [0,0]
predicate moveRobotX(DimX pos):
  pos+1 = next(pos) |
  pos   = next(pos) |
  pos-1 = next(pos);
  
predicate moveRobotY(DimY pos):
  pos+1 = next(pos) |
  pos   = next(pos) |
  pos-1 = next(pos);
  
   
gar robotMovesAtMostOne:
G moveRobotX(robotX) & moveRobotY(robotY);


gar  ini robotX =0 & robotY =0;
gar alw robotX = 2 implies robotY =7;
gar alw robotX = 5 implies robotY =0;
gar alwEv robotX=7 & robotY =7;
gar alw robotX=7 & robotY=7 implies (next(robotX)=7 & next(robotY)=7);



